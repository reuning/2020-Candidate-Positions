?btergm
library(btergm)
?btergm
rm(list=ls())
rm(list=ls())
library(data.table)
df <- fread("/Users/kevinreuning/Dropbox/H089_votes.csv")
membs <- fread("/Users/kevinreuning/Dropbox/H089_members.csv")
membs <- membs[, c("icpsr", "party_code", "bioname")]
full <- merge(membs, df, all.y=T)
full$prop <- NA
full[,cast_code:=ifelse(cast_code %in% c(1,6), cast_code, NA)]
full[,cast_code:=1*(cast_code==1)]
outcome <- full[,mean(cast_code, na.rm=T), by=.(rollnumber)]
full <- full[!full$rollnumber %in% outcome$rollnumber[outcome$V1==1 |outcome$V1==0 ]]
# full <- full[1:5000,]
resp = full$cast_code
que = as.numeric(as.factor(paste("v", full$rollnumber, sep="_")))
pers = as.numeric(as.factor(full$bioname))
pers <- pers[!is.na(resp)]
que <- que[!is.na(resp)]
resp <- resp[!is.na(resp)]
K = 2
M = max(pers)
Q = max(que)
alpha = rep(1/K, K)
fullpers <- pers
fullque <- que
fullresp <- resp
N = length(resp)
ids <- sample.int(5, N, replace=T)
pers_test <- fullpers[ids==5]
que_test <- fullque[ids==5]
resp_test <- fullresp[ids==5]
pers <- fullpers[ids!=5]
que <- fullque[ids!=5]
resp <- fullresp[ids!=5]
N = length(pers)
tmp <- sapply(1:M, function(x) which(pers==x))
pers_mat_N <- unlist(lapply(tmp, length))
pers_mat <- matrix(0, length(tmp), max(pers_mat_N))
pers_mat_K <- max(pers_mat_N)
for(ii in 1:nrow(pers_mat)){
pers_mat[ii,1:(pers_mat_N[ii])] <- tmp[[ii]]
}
N_test = length(pers_test)
library(rstan)
mod <- stan_model("/Users/kevinreuning/Dropbox/Projects/DFP/LCA/Class_bi.stan")
pp_tmp <- matrix(NA, 6, 1000)
for(ii in 1:6){
K = ii
alpha = as.array(rep(1/K, K))
out <- vb(mod)
tmp <- extract(out)
pp_tmp[ii,] <- tmp$pp_test
}
tmp <- apply(pp_tmp, 1, quantile, c(0.025, .5, 0.975))
tmp <- t(tmp)
colnames(tmp) <- c("lo", "mid", "hi")
tmp <- as.data.frame(tmp)
tmp$clusters <- 1:6
ggplot(tmp) + geom_pointrange(x=clusters, y=mid, ymin=lo, ymax=hi)
ggplot(tmp) + geom_pointrange(aes(x=clusters, y=mid, ymin=lo, ymax=hi))
tmp
out
K = 4
alpha = as.array(rep(1/K, K))
out <- stan(mod, cores=2, chains=2)
?stan
out <- stan(fit=mod, cores=2, chains=2)
K = 4
alpha = as.array(rep(1/K, K))
out <- vb(mod)
out <- stan(fit=out, cores=2, chains=2)
stan_trace(mod, "phi[1,1]")
stan_trace(out, "phi[1,1]")
stan_trace(out, "theta[1,1]")
stan_trace(out, "theta")
rpois(1000, 10)
tmp <- rpois(1000, 10)
set.seed(1)
tmp <- rpois(1000, 10)
mean(tmp)
var(tmp)
tmp <- rpois(1000 + rnorm(1000), 10)
mean(tmp)
var(tmp)
tmp <- rpois(1000 + rnorm(1000), 10)
mean(tmp)
var(tmp)
tmp <- rpois(1000 + rnorm(1000, 0, 2), 10)
mean(tmp)
var(tmp)
set.seed(1)
tmp <- rpois(1000 + rnorm(1000, 0, 2), 10)
mean(tmp)
var(tmp)
set.seed(1)
tmp <- rpois(1000 + rnorm(1000, 0, 2), 10)
mean(tmp)
var(tmp)
set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000 + rnorm(1000, 0, 2), 10)
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(vars))
1000 + rnorm(1000, 0, 2)
set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000, 10+rnorm(1000, 0, 2))
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(vars))
set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000, 10+rnorm(1000, 0, 4))
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(vars))
set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000, 100+rnorm(1000, 0, 10))
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(vars))
set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000, exp(1+rnorm(1000, 0, 10))
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(vars))
set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000, exp(1+rnorm(1000, 0, 10)))
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(vars))
exp(1+rnorm(1000, 0, 10))
warninigs()
warninigs()
warnings()
exp(1+rnorm(1000, 0, 10))
plot(exp(1+rnorm(1000, 0, 10))
)
tmp <- rpois(1000, exp(1+rnorm(1000, 0, 10)))
tmp
tmp <- rpois(1000, exp(1+rnorm(1000, 0, 1)))
tmp
rpois(100, 0)
set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000, exp(1+rnorm(1000, 0, 1)))
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(vars))
exp(1+rnorm(1000, 0, 1))
exp(1)+rnorm(1000, 0, 1))
exp(1)+(rnorm(1000, 0, 1))
set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000, exp(1+rnorm(1000, 0, .5)))
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(vars))
set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000, exp(1+rnorm(1000, 0, .5)))
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(vars))
set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000, exp(1+rnorm(1000, 0, .5)))
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(vars))
set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000, exp(1+rnorm(1000, 0, .5)))
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(vars))
set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000, exp(1+rnorm(1000, 0, .5)))
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(vars))
# set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000, exp(1+rnorm(1000, 0, .5)))
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(vars))
# set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000, exp(1+rnorm(1000, 0, .5)))
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(vars))
# set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000, exp(1+rnorm(1000, 0, .5)))
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(vars))
# set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000, exp(1+rnorm(1000, 0, .5)))
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(vars))
# set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000, exp(1+rnorm(1000, 0, .5)))
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(vars))
# set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000, exp(1+rnorm(1000, 0, .5)))
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(vars))
# set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000, exp(1+rnorm(1000, 0, .5)))
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(vars))
# set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000, exp(1+rnorm(1000, 0, .5)))
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(vars))
# set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000, exp(1+rnorm(1000, 0, .5)))
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(vars))
plot(density(means))
plot(density(vars))
# set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000, exp(1+rnorm(1000, 0, .5)))
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(means))
plot(density(vars))
# set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000, exp(10+rnorm(1000, 0, .5)))
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(means))
plot(density(vars))
# set.seed(1)
vars <- numeric(100)
means <- numeric(100)
for(ii in 1:100){
tmp <- rpois(1000, exp(2+rnorm(1000, 0, .5)))
means[ii] <- mean(tmp)
vars[ii] <- var(tmp)
}
plot(density(means))
plot(density(vars))
rnegbinom
?NegBinomial
rgamma(1000, 1, 1)
plot(rgamma(100, 1, 1))
plot(rgamma(100, 1, 2))
plot(rgamma(100, 1, 4))
??gp
?ggforce
??ggforce
install.packages("tidyquant")
setwd("/Users/kevinreuning/Dropbox/Projects/DFP/Candidate_Position/")
df <- read.csv("dem_pos.csv", strip.white = T)
all_cands <- c("Bernie Sanders", "John Delaney",
"Michael Bennet",  "Joe Biden", "Cory Booker", "Steve Bullock",
"Pete Buttigieg", "Julian Castro",   "Bill DeBlasio",
"Tulsi Gabbard",   "Kirsten Gillibrand", "Kamala Harris",   "John Hickenlooper",
"Jay Inslee", "Amy Klobuchar",   "Wayne Messam", "Seth Moulton", "Beto O'Rourke",
"Tim Ryan", "Eric Swalwell",   "Elizabeth Warren",
"Marianne Williamson", "Andrew Yang")
tmp <- apply(df, 2, function(x) length(unique(na.omit(x))))
Y_2 <- df[,tmp==2]
for(ii in 1:ncol(Y_2)){
if(2 %in% Y_2[,ii]) Y_2[,ii] <- Y_2[,ii] - 1
}
rownames(Y_2) <- df$Candidate
Y_2 <- melt(as.matrix(Y_2))
Y_2 <- Y_2[!is.na(Y_2$value),]
iss_2 <- as.numeric(Y_2$Var2)
cand_2 <- as.numeric(factor(Y_2$Var1, levels=all_cands))
Y_2 <- Y_2$value
N_2 <- length(Y_2)
K_2 <- max(iss_2)
Y_3 <- df[,tmp==3]
for(ii in 1:ncol(Y_3)){
if(0 %in% Y_3[,ii]) Y_3[,ii] <- Y_3[,ii] + 1
}
rownames(Y_3) <- df$Candidate
Y_3 <- melt(as.matrix(Y_3))
Y_3 <- Y_3[!is.na(Y_3$value),]
iss_3 <- as.numeric(Y_3$Var2)
cand_3 <- as.numeric(factor(Y_3$Var1, levels=all_cands))
Y_3 <- Y_3$value
N_3 <- length(Y_3)
K_3 <- max(iss_3)
library(rstan)
mod <- stan(file="model.stan", cores=2, chains=2)
??melt
setwd("/Users/kevinreuning/Dropbox/Projects/DFP/Candidate_Position/")
rm(list=ls())
df <- read.csv("dem_pos.csv", strip.white = T)
all_cands <- c("Bernie Sanders", "John Delaney",
"Michael Bennet",  "Joe Biden", "Cory Booker", "Steve Bullock",
"Pete Buttigieg", "Julian Castro",   "Bill DeBlasio",
"Tulsi Gabbard",   "Kirsten Gillibrand", "Kamala Harris",   "John Hickenlooper",
"Jay Inslee", "Amy Klobuchar",   "Wayne Messam", "Seth Moulton", "Beto O'Rourke",
"Tim Ryan", "Eric Swalwell",   "Elizabeth Warren",
"Marianne Williamson", "Andrew Yang")
tmp <- apply(df, 2, function(x) length(unique(na.omit(x))))
Y_2 <- df[,tmp==2]
for(ii in 1:ncol(Y_2)){
if(2 %in% Y_2[,ii]) Y_2[,ii] <- Y_2[,ii] - 1
}
rownames(Y_2) <- df$Candidate
Y_2 <- reshape::melt(as.matrix(Y_2))
Y_2 <- Y_2[!is.na(Y_2$value),]
iss_2 <- as.numeric(Y_2$Var2)
cand_2 <- as.numeric(factor(Y_2$Var1, levels=all_cands))
Y_2 <- Y_2$value
N_2 <- length(Y_2)
K_2 <- max(iss_2)
Y_3 <- df[,tmp==3]
for(ii in 1:ncol(Y_3)){
if(0 %in% Y_3[,ii]) Y_3[,ii] <- Y_3[,ii] + 1
}
rownames(Y_3) <- df$Candidate
Y_3 <- reshape::melt(as.matrix(Y_3))
Y_3 <- Y_3[!is.na(Y_3$value),]
iss_3 <- as.numeric(Y_3$Var2)
cand_3 <- as.numeric(factor(Y_3$Var1, levels=all_cands))
Y_3 <- Y_3$value
N_3 <- length(Y_3)
K_3 <- max(iss_3)
library(rstan)
iss_2
Y
Y_2
Y_3
tmp <- apply(df, 2, function(x) length(unique(na.omit(x))))
Y_2 <- df[,tmp==2]
for(ii in 1:ncol(Y_2)){
if(2 %in% Y_2[,ii]) Y_2[,ii] <- Y_2[,ii] - 1
}
rownames(Y_2) <- df$Candidate
Y_2 <- reshape::melt(as.matrix(Y_2))
Y_2
setwd("/Users/kevinreuning/Dropbox/Projects/DFP/Candidate_Position/")
rm(list=ls())
df <- read.csv("dem_pos.csv", strip.white = T)
all_cands <- c("Bernie Sanders", "John Delaney",
"Michael Bennet",  "Joe Biden", "Cory Booker", "Steve Bullock",
"Pete Buttigieg", "Julian Castro",   "Bill DeBlasio",
"Tulsi Gabbard",   "Kirsten Gillibrand", "Kamala Harris",   "John Hickenlooper",
"Jay Inslee", "Amy Klobuchar",   "Wayne Messam", "Seth Moulton", "Beto O'Rourke",
"Tim Ryan", "Eric Swalwell",   "Elizabeth Warren",
"Marianne Williamson", "Andrew Yang")
tmp <- apply(df, 2, function(x) length(unique(na.omit(x))))
Y_2 <- df[,tmp==2]
for(ii in 1:ncol(Y_2)){
if(2 %in% Y_2[,ii]) Y_2[,ii] <- Y_2[,ii] - 1
}
rownames(Y_2) <- df$Candidate
Y_2 <- reshape::melt(as.matrix(Y_2))
Y_2 <- Y_2[!is.na(Y_2$value),]
iss_2 <- as.numeric(Y_2$X2)
cand_2 <- as.numeric(factor(Y_2$X1, levels=all_cands))
Y_2 <- Y_2$value
N_2 <- length(Y_2)
K_2 <- max(iss_2)
Y_3 <- df[,tmp==3]
for(ii in 1:ncol(Y_3)){
if(0 %in% Y_3[,ii]) Y_3[,ii] <- Y_3[,ii] + 1
}
rownames(Y_3) <- df$Candidate
Y_3 <- reshape::melt(as.matrix(Y_3))
Y_3 <- Y_3[!is.na(Y_3$value),]
iss_3 <- as.numeric(Y_3$X2)
cand_3 <- as.numeric(factor(Y_3$X1, levels=all_cands))
Y_3 <- Y_3$value
N_3 <- length(Y_3)
K_3 <- max(iss_3)
library(rstan)
mod <- stan(file="model.stan", cores=2, chains=2)
N
N <- length(all_cands)
mod <- stan(file="model.stan", cores=2, chains=2)
stan_plot(mod, "theta_cand")
stan_trace(mod, "theta_cand")
all_cands
stan_trace(mod, "theta_iss_2")
stan_trace(mod, "theta_iss_3")
stan_trace(mod, "beta_iss_3")
stan_trace(mod, "tau_iss_3")
stan_plot(mod, "theta_cand")
stan_trace(mod, "tau_iss_3")?
?stan
mod <- stan(file="model.stan", cores=2, chains=4, control=list("adapt_delta"=.9))
stan_plot(mod, "theta_cand")
mod <- stan(file="model.stan", cores=2, chains=4, control=list("adapt_delta"=.9))
stan_plot(mod, "theta_cand")
stan_plot(mod, "beta_iss_2")
stan_plot(mod, "theta_iss_2")
stan_plot(mod, "theta_iss_3")
all_cands
?categorical_logit
rstan:::rstudio_stanc("model.stan")
stan_version()
rstan:::rstudio_stanc("model.stan")
rstan:::rstudio_stanc("model.stan")
rstan:::rstudio_stanc("model.stan")
mod <- stan(file="model.stan", cores=2, chains=4, control=list("adapt_delta"=.9))
mod <- stan(file="model.stan", cores=2, chains=4, control=list("adapt_delta"=.9))
stan_plot(mod, "theta_cand")
stan_plot(mod, "beta_iss_3")
stan_plot(mod, "beta_iss_2")
K_3
mod <- stan(file="model.stan", cores=2, chains=4, control=list("adapt_delta"=.9))
stan_plot(mod, "beta_iss_2")
stan_plot(mod, "theta_cand")
all_cands
stan_plot(mod, "theta_cand") + scale_y_discrete(all_cands)
?scale_y_discrete
stan_plot(mod, "theta_cand") + scale_y_continuous(all_cands)
stan_plot(mod, "theta_cand") + scale_y_discrete(limits=all_cands)
stan_plot(mod, "theta_cand") + scale_y_discrete(limits=rev(all_cands))
